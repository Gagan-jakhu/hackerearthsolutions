/*
You have been given an array A consisting of N integers. All the elements in this array A are unique. You have to answer some queries based
on the elements of this array. Each query will consist of a single integer x. You need to print the rank based position of this element in
this array considering that the array is 1 indexed. The rank based position of an element in an array is its position in the array when the
array has been sorted in ascending order.

Note: It is guaranteed that all the elements in this array are unique and for each x belonging to a query, value x shall exist in the array

Input Format

The first line consists of a single integer N denoting the size of array A. The next line contains N unique integers, denoting the content
of array A. The next line contains a single integer q denoting the number of queries. Each of the next q lines contains a single integer 
x denoting the element whose rank based position needs to be printed.

Output Format

You need to print q integers denoting the answer to each query.

Constraints

1≤N≤105

1≤A[i]≤109

1≤q≤105

1≤x≤109

SAMPLE INPUT 
5
1 2 3 4 5
5
1
2
3
4
5
SAMPLE OUTPUT 
1
2
3
4
5 
*/

#include <bits/stdc++.h>
using namespace std;

/*int binsearch(int a[], int n, int key)
{
    int low=0; 
    int high=n-1;
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(a[mid]==key) return mid+1;
        else if(key > a[mid])
         {
             low=mid+1;
         }
         else
         {
             high=mid-1;
         }
    }
    return -1;
}*/

int bs(int a[], int low, int high, int key)
{
    if(low<=high)
    {
        int mid= (low+high)/2;
        if(a[mid] == key) return mid+1;
        else if(key>a[mid]) return bs(a,mid+1,high,key);
        else return bs(a,low,mid-1,key);
    }
    return -1;
}

int main()
{
    int n,i;
    cin>>n;
    int a[n] , qs;
    for(i=0;i<n;i++) cin>>a[i];
    cin>>qs;
    int q[qs];
    for(i=0;i<qs;i++) cin>>q[i];
    sort(a,a+n);
    for(i=0;i<qs;i++)
    {
        cout<<bs(a,0,n-1,q[i])<<endl;
        //cout<<binsearch(a,n,q[i])<<endl;
    }
}
